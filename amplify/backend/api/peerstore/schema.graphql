# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
#input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Position
  @model
  @auth(rules: [{ allow: public, operations: [read] }])
{
  positionID: String! @primaryKey
  lat: Float! @index
  lng: Float! @index
  stores: [StoreConnection] @hasMany(indexName: "storeConnectionsByPositionID", fields: ["positionID"])
}

type StoreConnection
  @model
  @auth(rules: [
    { allow: custom, provider: function },
    { allow: public, operations: [read] }
  ])
{
  id: ID!
  connectionID: String! @index
  store: Store @hasOne(fields: ["storeID"])
  storeID: ID! @index
  positionID: String! @index(name: "storeConnectionsByPositionID")
  position: Position @belongsTo(fields: ["positionID"])
}

type VisitorConnection
  @model
  @auth(rules: [{ allow: custom, provider: function }])
{
  id: ID!
  connectionID: String! @index
  lat: Float!
  lng: Float!
  zone: String! @index
}

type Store @model @auth(rules: [
  { allow: owner },
  { allow: custom, provider: function }
]) {
  id: ID!
  name: String!
  description: String
  address: String
  city: String
  state: String
  zip: String
  phone: String
  email: String
  # website: String
  # facebook: String
  # instagram: String
  # twitter: String
  # youtube: String
  # tiktok: String
  # pinterest: String
  # snapchat: String
  # linkedin: String
  # hours: String
  image: String
  tags: [String]
  merchantID: String
  hashKey: String
  hashIV: String
}

type Order
  @model
  @auth(rules: [
    { allow: owner, operations: [create, read] },
    { allow: custom, provider: function }
  ])
{
  id: ID!
  storeID: ID!
  totalAmount: Float!
  detail: String!
  status: OrderStatus!
  expired: AWSDateTime
  billingID: ID
  paymentID: ID
}

enum OrderStatus {
  PENDING       # 訂單已建立，但未付款
  PAID          # 已付款
  PROCESSING    # 訂單處理中
  SHIPPED       # 已發貨
  DELIVERED     # 已送達
  CANCELED      # 訂單已取消
  REFUNDED      # 已退款
  FAILED        # 付款失敗
}

type Billing
  @model
  @auth(rules: [
    { allow: owner, operations: [create, read] },
    { allow: custom, provider: function }
  ])
{
  id: ID!
  tradeNo: String! @index(name: "byTradeNo")
  orderID: ID!
  order: Order @hasOne(fields: ["orderID"])
}

type Paymnet
  @model
  @auth(rules: [
    { allow: custom, provider: function }
  ])
{
  id: ID!
}

type Query {
  getOrderByID(id: ID!): Order
    @function(name: "ddbGetOrderByID-${env}")
    @auth(rules: [{ allow: private, provider: userPools }])
  getStoreByID(id: ID!): StoreInfo
    @function(name: "ddbGetStoreByID-${env}")
    @auth(rules: [{ allow: private, provider: userPools }])
}

type StoreInfo {
  id: ID!
  name: String!
  description: String
  address: String
  city: String
  state: String
  zip: String
  phone: String
  email: String
  image: String
  tags: [String]
}
